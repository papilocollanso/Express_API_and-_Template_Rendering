{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\new\\\\love\\\\src\\\\components\\\\counters.jsx\";\nimport React, { Component } from 'react';\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counter.indexOf(counter);\n      counters[index] = { ...counter\n      };\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDelete = counterId => {\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleReset = () => {\n      const counter = this.state.counters.map(c => {\n        c.counter = 0;\n        return c;\n      });\n      this.setState({\n        counter\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleReset,\n        className: \"btn btn-success btn-sm m-2\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this), this.state.counters.map(counter => /*#__PURE__*/_jsxDEV(Counter, {\n        onIncrement: this.handleIncrement,\n        onDelete: this.handleDelete,\n        counter: counter\n      }, counter.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 43\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["C:/new/love/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleIncrement","counter","index","indexOf","setState","handleDelete","counterId","filter","c","handleReset","map","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACJC,MAAAA,QAAQ,EAAC,CACL;AAACC,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAC;AAAb,OADK,EAEL;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAC;AAAb,OAFK,EAGL;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAC;AAAb,OAHK,EAIL;AAACD,QAAAA,EAAE,EAAC,CAAJ;AAAOC,QAAAA,KAAK,EAAC;AAAb,OAJK;AADL,KADqB;;AAAA,SAS5BC,eAT4B,GASZC,OAAO,IAAE;AACvB,YAAMJ,QAAQ,GAAC,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAf;AACA,YAAMK,KAAK,GAACD,OAAO,CAACE,OAAR,CAAgBF,OAAhB,CAAZ;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,GAAgB,EAAE,GAAGD;AAAL,OAAhB;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,CAAgBH,KAAhB;AACP,WAAKK,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AACM,KAf2B;;AAAA,SAgB5BQ,YAhB4B,GAgBbC,SAAD,IAAa;AACxB,YAAMT,QAAQ,GAAC,KAAKD,KAAL,CAAWC,QAAX,CAAoBU,MAApB,CAA2BC,CAAC,IAAEA,CAAC,CAACV,EAAF,KAASQ,SAAvC,CAAf;AACI,WAAKF,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AAEN,KApB2B;;AAAA,SAqB5BY,WArB4B,GAqBhB,MAAI;AACd,YAAMR,OAAO,GAAG,KAAKL,KAAL,CAAWC,QAAX,CAAoBa,GAApB,CAAwBF,CAAC,IAAE;AACrCA,QAAAA,CAAC,CAACP,OAAF,GAAU,CAAV;AACA,eAAOO,CAAP;AACH,OAHa,CAAhB;AAIE,WAAKJ,QAAL,CAAc;AAACH,QAAAA;AAAD,OAAd;AACH,KA3B2B;AAAA;;AA4B7BU,EAAAA,MAAM,GAAG;AACL,wBAEA;AAAA,8BACK;AAAQ,QAAA,OAAO,EAAE,KAAKF,WAAtB;AACA,QAAA,SAAS,EAAC,4BADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,EAGA,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,GAApB,CAAwBT,OAAO,iBAAG,QAAC,OAAD;AAEjC,QAAA,WAAW,EAAE,KAAKD,eAFe;AAGlC,QAAA,QAAQ,EAAE,KAAKK,YAHmB;AAIhC,QAAA,OAAO,EAAEJ;AAJuB,SAC7BA,OAAO,CAACH,EADqB;AAAA;AAAA;AAAA;AAAA,cAAlC,CAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAaH;;AA1C4B;;AA6CjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Counter from \"./counter\";\r\nclass Counters extends Component {\r\n    state = { \r\n        counters:[\r\n            {id:1, value:4},\r\n            {id:2, value:0},\r\n            {id:3, value:0},\r\n            {id:4, value:0}\r\n        ] \r\n     }\r\n     handleIncrement=counter=>{\r\n       const counters=[...this.state.counters];\r\n       const index=counter.indexOf(counter);\r\n       counters[index]={ ...counter};\r\n       counters[index].value++;\r\nthis.setState({counters});\r\n     };\r\n     handleDelete= (counterId)=>{\r\n        const counters=this.state.counters.filter(c=>c.id !== counterId);\r\n            this.setState({counters});\r\n        \r\n     };\r\n     handleReset=()=>{\r\n       const counter=  this.state.counters.map(c=>{\r\n             c.counter=0;\r\n             return c;\r\n         });\r\n         this.setState({counter});\r\n     };\r\n    render() { \r\n        return (\r\n           \r\n        <div>\r\n             <button onClick={this.handleReset}  \r\n             className=\"btn btn-success btn-sm m-2\">Reset</button>\r\n       {this.state.counters.map(counter=>(<Counter\r\n        key={counter.id}\r\n         onIncrement={this.handleIncrement} \r\n        onDelete={this.handleDelete} \r\n          counter={counter}>\r\n            </Counter>))}\r\n      \r\n        </div>  );\r\n    }\r\n}\r\n \r\nexport default Counters;"]},"metadata":{},"sourceType":"module"}